// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

package org.example.goeverywhere.protocol.grpc;

public interface WaypointOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.example.goeverywhere.protocol.grpc.Waypoint)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.type.LatLng location = 1;</code>
   * @return Whether the location field is set.
   */
  boolean hasLocation();
  /**
   * <code>.google.type.LatLng location = 1;</code>
   * @return The location.
   */
  com.google.type.LatLng getLocation();
  /**
   * <code>.google.type.LatLng location = 1;</code>
   */
  com.google.type.LatLngOrBuilder getLocationOrBuilder();

  /**
   * <code>double distance_from_start_km = 2;</code>
   * @return The distanceFromStartKm.
   */
  double getDistanceFromStartKm();

  /**
   * <code>double duration_from_start_min = 3;</code>
   * @return The durationFromStartMin.
   */
  double getDurationFromStartMin();

  /**
   * <code>repeated .org.example.goeverywhere.protocol.grpc.WaypointMetadata waypointMetadata = 4;</code>
   */
  java.util.List<org.example.goeverywhere.protocol.grpc.WaypointMetadata> 
      getWaypointMetadataList();
  /**
   * <code>repeated .org.example.goeverywhere.protocol.grpc.WaypointMetadata waypointMetadata = 4;</code>
   */
  org.example.goeverywhere.protocol.grpc.WaypointMetadata getWaypointMetadata(int index);
  /**
   * <code>repeated .org.example.goeverywhere.protocol.grpc.WaypointMetadata waypointMetadata = 4;</code>
   */
  int getWaypointMetadataCount();
  /**
   * <code>repeated .org.example.goeverywhere.protocol.grpc.WaypointMetadata waypointMetadata = 4;</code>
   */
  java.util.List<? extends org.example.goeverywhere.protocol.grpc.WaypointMetadataOrBuilder> 
      getWaypointMetadataOrBuilderList();
  /**
   * <code>repeated .org.example.goeverywhere.protocol.grpc.WaypointMetadata waypointMetadata = 4;</code>
   */
  org.example.goeverywhere.protocol.grpc.WaypointMetadataOrBuilder getWaypointMetadataOrBuilder(
      int index);
}
