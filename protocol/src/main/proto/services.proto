syntax = "proto3";
option java_multiple_files = true;
package org.example.goeverywhere.protocol.grpc;

import "google/protobuf/empty.proto";
import "google/type/latlng.proto";

/**
 * Possible user types
 */
enum UserType {
  DRIVER = 0;
  RIDER = 1;
}

/**
 * A request to create a new user
 */
message SignUpRequest {
  UserType userType = 1;
  string name = 2;
  string email = 3;
  string password = 4;
}

/**
 * The first message user must send to register in the system
 */
message LoginRequest {
  string email = 1;
  string password = 2;
}

/**
 * The response upon successful login
 */
message LoginResponse {
  string sessionId = 1;
  UserType userType = 2;
}

/**
 * A request driver sends to get the updates from the system
 */
message SubscribeForUpdatesRequest {
  string sessionId = 1;
}

/**
 * A request user sends to get from one point to theother
 */
message RideRequest {
  string sessionId = 1;
  string origin = 2;
  string destination = 3;
}

/**
 * A request that a registered user sends to keep the system updated about the latest location
 */
message UpdateCurrentLocationRequest {
  string sessionId = 1;
  google.type.LatLng location = 3;
}

/**
 * An event received by a rider providing the latest information about the ride
 */
message RiderEvent {
  oneof event {
    RideRegistered ride_registered = 1;
    RideAccepted ride_accepted = 2;
    DriverEnRoute driver_en_route = 3;
    DriverArrived driver_arrived = 4;
    RideStarted ride_started = 5;
    RideCompleted ride_completed = 7;
    DriverRejected driver_rejected = 8;
    SystemCancelled system_cancelled = 9;
  }
}

message RideRegistered {
  string ride_id = 1;
}

message RideAccepted {
  string ride_id = 1;
  Route routeToRider = 2;
}

message DriverEnRoute {
  google.type.LatLng location = 1;
}

message DriverArrived {
  string ride_id = 1;
  google.type.LatLng location = 2;
}

message RideStarted {
  string session_id = 1;
  string ride_id = 2;
}

message RideCompleted {
  string ride_id = 1;
  double fare = 2;
}

message DriverRejected {
  string ride_id = 1;
}

message RiderCancelled {

}

message DriverEventSubscribeRequest {
  string sessionId = 1;
}

message SystemCancelled {
  string message = 1;
}

message DriverEvent {
  oneof event {
    RideRequested ride_requested = 1;
    RiderCancelled ride_cancelled = 2;
    RideAccepted ride_accepted = 3;
    RideDetails ride_details = 4;
  }
}

message RideRequested {
  string ride_id = 1;
  string rider_id = 2;
  google.type.LatLng pickup_location = 3;
  google.type.LatLng destination = 4;
}


message RideDetails {
  string ride_id = 1;
  Route routeToDestination = 2;
}

message SubscribeForRideEventsRequest {
  string session_id = 1;
}

message AcceptRideRequest {
  string session_id = 1;
  string ride_id = 2;
}

message RejectRideRequest {
  string session_id = 1;
  string ride_id = 2;
}

message DriverArrivedRequest {
  string session_id = 1;
  string ride_id = 2;
}

message RideStartedRequest {
  string session_id = 1;
  string ride_id = 2;
}

message RideCompletedRequest {
  string session_id = 1;
  string ride_id = 2;
}

message Route {
  repeated Waypoint waypoints = 1;
  double total_distance_km = 2;
  double total_duration_min = 3;
}

message Waypoint {
  google.type.LatLng location = 1;
  double distance_from_start_km = 2;
  double duration_from_start_min = 3;
}

service UserService {
  rpc signUp(SignUpRequest) returns (google.protobuf.Empty);
  rpc login(LoginRequest) returns (LoginResponse);
  rpc updateCurrentLocation(UpdateCurrentLocationRequest) returns (google.protobuf.Empty);
}

service RiderService {
  rpc requestRide(RideRequest) returns (stream RiderEvent);
}

service DriverService {
  rpc subscribeForRideEvents(SubscribeForRideEventsRequest) returns (stream DriverEvent);
  rpc acceptRide(AcceptRideRequest) returns (google.protobuf.Empty);
  rpc rejectRide(RejectRideRequest) returns (google.protobuf.Empty);
  rpc driverArrived(DriverArrivedRequest) returns (google.protobuf.Empty);
  rpc rideStarted(RideStartedRequest) returns (google.protobuf.Empty);
  rpc rideCompleted(RideCompletedRequest) returns (google.protobuf.Empty);
}